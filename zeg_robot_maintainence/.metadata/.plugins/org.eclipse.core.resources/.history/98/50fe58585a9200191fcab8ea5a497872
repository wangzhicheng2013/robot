#include "zeg_robot_broadcast.hpp"
#include "udp_unicast_agent.hpp"
#include "rpc_server.h"
using namespace zeg_robot_maintainence;
zeg_robot_broadcast zeg_robot_broadcast_thread;
bool start_thread() {
	if (false == zeg_robot_broadcast_thread.init()) {
		LOG_CRIT << "zeg_robot_broadcast_thread init failed";
		return false;
	}
	zeg_robot_broadcast_thread.run();
	return true;
}
void join_thread() {
	zeg_robot_broadcast_thread.join();
}
char udp_recv_buf[BUFSIZ] = "";
udp_unicast_agent mock_server;
void mock_thread() {
	while (true) {
		mock_server.recv_unicast_return_ack(udp_recv_buf, "zeg_robot_ack");
	}
}

int main() {
	/*
	if (false == start_thread()) {
		return -1;
	}
	join_thread();
*/
	if (false == mock_server.init()) {
		cout << "mock server init failed...!" << endl;
		return -1;
	}

	return 0;
}



