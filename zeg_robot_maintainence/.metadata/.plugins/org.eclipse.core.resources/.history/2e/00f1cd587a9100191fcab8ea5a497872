#ifndef SRC_ZEG_ROBOT_DEFINE_HPP_
#define SRC_ZEG_ROBOT_DEFINE_HPP_
#include <stdint.h>
#include <vector>
#include "msgpack.hpp"
namespace zeg_robot_maintainence {
using namespace std;
struct robot_pose {
	inline robot_pose(double x = 0, double y = 0, double theta = 0) : x(x), y(y), theta(theta) {
	}
	robot_pose(const robot_pose &other) {
		x = other.x;
		y = other.y;
		theta = other.theta;
	}
	robot_pose & operator = (const robot_pose &other) {
		x = other.x;
		y = other.y;
		theta = other.theta;
		return *this;
	}
	bool operator == (const robot_pose &other) {
		return (x == other.x) && (y == other.y) && (theta == other.theta);
	}
	friend bool operator == (const robot_pose &one, const robot_pose &other) {
		return (one.x == other.x) && (one.y == other.y) && (one.theta == other.theta);
	}
	inline void normalize() {
		theta = atan2(sin(theta), cos(theta));
    }
	inline void set_zero() {
		x = 0;
		y = 0;
		theta = 0;
	}
    double x, y;
    double theta;
	MSGPACK_DEFINE(x, y, theta);
};
}

#endif /* SRC_ZEG_ROBOT_DEFINE_HPP_ */
